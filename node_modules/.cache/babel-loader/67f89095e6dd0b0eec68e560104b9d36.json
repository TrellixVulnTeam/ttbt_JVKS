{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Em Yeu Website\\\\src\\\\components\\\\pages\\\\Em.js\";\nimport '../../App.css';\nimport React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nconst images = ['//placekitten.com/1500/500', '//placekitten.com/4000/3000', '//placekitten.com/800/1200', '//placekitten.com/1500/1500'];\nexport default class LightboxExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photoIndex: 0,\n      isOpen: false\n    };\n  }\n\n  render() {\n    const {\n      photoIndex,\n      isOpen\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.setState({\n        isOpen: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"Open Lightbox\"), isOpen && /*#__PURE__*/React.createElement(Lightbox, {\n      mainSrc: images[photoIndex],\n      nextSrc: images[(photoIndex + 1) % images.length],\n      prevSrc: images[(photoIndex + images.length - 1) % images.length],\n      onCloseRequest: () => this.setState({\n        isOpen: false\n      }),\n      onMovePrevRequest: () => this.setState({\n        photoIndex: (photoIndex + images.length - 1) % images.length\n      }),\n      onMoveNextRequest: () => this.setState({\n        photoIndex: (photoIndex + 1) % images.length\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/Desktop/Em Yeu Website/src/components/pages/Em.js"],"names":["React","Component","Lightbox","images","LightboxExample","constructor","props","state","photoIndex","isOpen","render","setState","length"],"mappings":";AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,gCAAP;AAGA,MAAMC,MAAM,GAAG,CACX,4BADW,EAEX,6BAFW,EAGX,4BAHW,EAIX,6BAJW,CAAf;AAOE,eAAe,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACrDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,CADD;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAyB,KAAKF,KAApC;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM,KAAKI,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAd,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAKGA,MAAM,iBACL,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEN,MAAM,CAACK,UAAD,CADjB;AAEE,MAAA,OAAO,EAAEL,MAAM,CAAC,CAACK,UAAU,GAAG,CAAd,IAAmBL,MAAM,CAACS,MAA3B,CAFjB;AAGE,MAAA,OAAO,EAAET,MAAM,CAAC,CAACK,UAAU,GAAGL,MAAM,CAACS,MAApB,GAA6B,CAA9B,IAAmCT,MAAM,CAACS,MAA3C,CAHjB;AAIE,MAAA,cAAc,EAAE,MAAM,KAAKD,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAd,CAJxB;AAKE,MAAA,iBAAiB,EAAE,MACjB,KAAKE,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAE,CAACA,UAAU,GAAGL,MAAM,CAACS,MAApB,GAA6B,CAA9B,IAAmCT,MAAM,CAACS;AAD1C,OAAd,CANJ;AAUE,MAAA,iBAAiB,EAAE,MACjB,KAAKD,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAE,CAACA,UAAU,GAAG,CAAd,IAAmBL,MAAM,CAACS;AAD1B,OAAd,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADF;AA0BD;;AAvCoD","sourcesContent":["import '../../App.css';\nimport React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\n\n\nconst images = [\n    '//placekitten.com/1500/500',\n    '//placekitten.com/4000/3000',\n    '//placekitten.com/800/1200',\n    '//placekitten.com/1500/1500',\n  ];\n\n  export default class LightboxExample extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        photoIndex: 0,\n        isOpen: false,\n      };\n    }\n  \n    render() {\n      const { photoIndex, isOpen } = this.state;\n  \n      return (\n        <div>\n          <button type=\"button\" onClick={() => this.setState({ isOpen: true })}>\n            Open Lightbox\n          </button>\n  \n          {isOpen && (\n            <Lightbox\n              mainSrc={images[photoIndex]}\n              nextSrc={images[(photoIndex + 1) % images.length]}\n              prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n              onCloseRequest={() => this.setState({ isOpen: false })}\n              onMovePrevRequest={() =>\n                this.setState({\n                  photoIndex: (photoIndex + images.length - 1) % images.length,\n                })\n              }\n              onMoveNextRequest={() =>\n                this.setState({\n                  photoIndex: (photoIndex + 1) % images.length,\n                })\n              }\n            />\n          )}\n        </div>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}